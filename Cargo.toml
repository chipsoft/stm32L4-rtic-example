[package]
name = "stm32-project"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
cortex-m = "0.7.3"
cortex-m-rt = "0.7.0"
embedded-hal = { version = "0.2.5", features=["unproven"] }
embedded-time = "0.12.0"
systick-monotonic = "1.0.0"

stm32l4xx-hal = { version = "0.7.1", features = ["stm32l432", "rt"]}
panic-halt= "0.2.0"
cortex-m-rtic = "1.0.0"

defmt = "0.3.0"
defmt-rtt = "0.3.0"
panic-probe = { version = "0.3.0", features = ["print-defmt"] }

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 3 # <-
overflow-checks = true # <-

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 3 # <-
overflow-checks = true # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
# NOTE disabled to work around issue rust-lang/rust#90357
# the bug results in log messages not having location information
# (the line printed below the log message that contains the file-line location)
# lto = 'fat'
opt-level = 3 # <-
overflow-checks = false # <-

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
# see comment in the profile.release section
lto = 'false'
opt-level = 3 # <-
overflow-checks = false # <-

## Cargo.toml
#[profile.dev]
#debug = 1 # default is `true`; not needed if not already overridden
#
#[profile.release]
#debug = 1 # default is `false`; using `true` is also OK as symbols reside on the host, not the target

## this lets you use `cargo fix`!
#[[bin]]
#name = "app"
#test = false
#bench = false

#[profile.dev]
#opt-level = 1
#codegen-units = 16
#debug = true
#lto = false
#
#[profile.release]
#opt-level = "s"     # optimize for size
#codegen-units = 1   # better optimizations
#debug = true        # symbols are nice and they don't increase the size on Flash
#lto = true          # better optimizations
#
## `syn` and other proc-macro crates take very long to build when optimized
## this disables optimizations for them reducing the time it takes to build the
## whole dependency graph by ~80%
#[profile.dev.build-override]
#codegen-units = 16
#debug = false
#debug-assertions = false
#incremental = true
#opt-level = 0
#overflow-checks = false
#
#[profile.release.build-override]
#codegen-units = 16
#debug = false
#debug-assertions = false
#incremental = true
#opt-level = 0
#overflow-checks = false